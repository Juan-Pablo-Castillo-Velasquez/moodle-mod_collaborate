{"version":3,"sources":["../src/settings.js"],"names":["define","$","str","init","contextId","modified","initialised","strings","checkFieldsComplete","flds","f","fld","val","trim","checkRESTFieldsComplete","checkSOAPFieldsComplete","apiMsg","stringKey","alertClass","extraClasses","msg","msgContainer","children","first","clone","addClass","html","empty","append","testApi","data","contextid","ajax","url","M","cfg","wwwroot","context","document","body","success","error","applyClickApiTest","click","e","preventDefault","applySettingChangeCheck","keypress","get_strings","key","component","then","s","connectionfailed","connectionverified","verifyingapi","connectionstatusunknown","test","navigator","userAgent","attr","css"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Settings JS.\n *\n * @package   mod_collaborate\n * @copyright Copyright (c) 2017 Blackboard Inc.\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str'], function($, str) {\n\n    return {\n        /**\n         * Initialising function\n         * @param {int} contextId\n         */\n        init: function(contextId) {\n\n            var modified = false,\n                initialised = false,\n                strings = {};\n\n            /**\n             * Check that settings fields have been completed.\n             * @param {array} flds\n             * @returns {boolean}\n             */\n            var checkFieldsComplete = function(flds) {\n                for (var f in flds) {\n                    var fld = flds[f];\n                    var val = '' + $('#id_s_collaborate_' + fld).val().trim();\n                    if (val === '') {\n                        return false;\n                    }\n                }\n                return true;\n            };\n\n            /**\n             * Check that REST settings have been completed.\n             * @returns {boolean}\n             */\n            var checkRESTFieldsComplete = function() {\n                var flds = ['restserver', 'restkey', 'restsecret'];\n                return checkFieldsComplete(flds);\n            };\n\n            /**\n             * Check that SOAP settings have been compelted.\n             * @returns {boolean}\n             */\n            var checkSOAPFieldsComplete = function() {\n                var flds = ['server', 'username', 'password'];\n                return checkFieldsComplete(flds);\n            };\n\n            /**\n             * Render new api status message.\n             *\n             * @param string stringKey\n             * @param string alertClass\n             * @param string extraClasses\n             */\n            var apiMsg = function(stringKey, alertClass, extraClasses) {\n                var msg = strings[stringKey];\n\n                var msgContainer = $('#api_diag .noticetemplate_' + alertClass).children().first().clone();\n\n                $(msgContainer).addClass(extraClasses);\n                $(msgContainer).html('<span class=\"api-connection-msg\">' + msg + '</span>');\n\n                // Wipe out existing connection status msg container.\n                $('#api_diag .api-connection-status').empty();\n\n                // Put in new msg container.\n                $('#api_diag .api-connection-status').append($(msgContainer));\n            };\n\n            /**\n             * Test api.\n             */\n            var testApi = function() {\n\n                apiMsg('verifyingapi', 'message', 'spinner');\n\n                var data;\n\n                if (checkRESTFieldsComplete()) {\n                    data = {\n                        'server': $('#id_s_collaborate_restserver').val().trim(),\n                        'restkey': $('#id_s_collaborate_restkey').val().trim(),\n                        'restsecret': $('#id_s_collaborate_restsecret').val() // Never trim secrets!\n                    };\n                } else {\n                    data = {\n                        'server': $('#id_s_collaborate_server').val().trim(),\n                        'username': $('#id_s_collaborate_username').val().trim(),\n                        'password': $('#id_s_collaborate_password').val() // Never trim passwords!\n                    };\n                }\n                data.contextid = contextId;\n\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/collaborate/testapi.php',\n                    context: document.body,\n                    data: data,\n                    success: function(data) {\n                        if (data.success) {\n                            if (!modified) {\n                                apiMsg('connectionverified', 'success');\n                            } else {\n                                apiMsg('connectionverifiedchanged', 'success');\n                            }\n                        } else {\n                            apiMsg('connectionfailed', 'problem');\n                        }\n                    },\n                    error: function() {\n                        apiMsg('connectionfailed', 'problem');\n                    }\n                });\n            };\n\n            /**\n             * Apply listener for api test button.\n             *\n             * @author Guy Thomas\n             */\n            var applyClickApiTest = function() {\n                $('.api_diag_btn').click(function(e) {\n                    e.preventDefault();\n                    testApi();\n                });\n            };\n\n            /**\n             * Apply listener for when settings changed.\n             *\n             * @author Guy Thomas\n             */\n            var applySettingChangeCheck = function() {\n                var settingfields = '#id_s_collaborate_server, #id_s_collaborate_username, #id_s_collaborate_password';\n                $(settingfields).keypress(function() {\n                    modified = true;\n                });\n            };\n\n            str.get_strings([\n                {key: 'connectionfailed', component: 'mod_collaborate'},\n                {key: 'connectionverified', component: 'mod_collaborate'},\n                {key: 'verifyingapi', component: 'mod_collaborate'},\n                {key: 'connectionstatusunknown', component: 'mod_collaborate'}\n            ]).then(function(s){\n\n                strings.connectionfailed = s[0];\n                strings.connectionverified = s[1];\n                strings.verifyingapi = s[2];\n                strings.connectionstatusunknown = s[3];\n\n                if (!initialised) {\n                    apiMsg('connectionstatusunknown', 'message');\n                }\n                applySettingChangeCheck();\n                applyClickApiTest();\n\n                if (checkSOAPFieldsComplete() !== '' || checkRESTFieldsComplete() !== '') {\n                    testApi();\n                }\n                // For IE / Edge, disable fieldset fields.\n                if (/Edge\\/\\d./i.test(navigator.userAgent)\n                    || /MSIE/i.test(navigator.userAgent)\n                    || /Trident/i.test(navigator.userAgent)) {\n                    $('fieldset[disabled=\"true\"] input').attr('disabled', 'true');\n                }\n\n                // If REST settings not complete then reveal SOAP settings.\n                if (!checkRESTFieldsComplete()) {\n                    $('.soapapisettings').css('display', 'block');\n                }\n\n                initialised = true;\n            });\n\n        }\n    };\n});\n"],"file":"settings.min.js"}